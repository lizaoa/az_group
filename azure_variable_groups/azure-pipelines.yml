variables:
 GLOBAL_MYSECRET: $(mySecret) # this will not work because the secret variable needs to be mapped as env
 GLOBAL_MY_MAPPED_ENV_VAR: $(nonSecretVariable) # this works because it's not a secret.

pool:
  name: my-win-pool

steps:

- powershell: |
    Write-Host "Using an macro for secret: $(GLOBAL_MYSECRET)"
    Write-Host "Using an macro for non-secret: $(GLOBAL_MY_MAPPED_ENV_VAR)"
    Write-Host "Using an input-macro works: $(mySecret)"
    Write-Host "Using an input-macro works non-secret: $(nonSecretvariable)"  
    Write-Host "Using the env var directly does not work: $env:MYSECRET"
     Write-Host "Using the env var directly does not work non-secret: $env:NONSECRETVARIABLE"   
    Write-Host "Using a global secret var mapped in the pipeline does not work either: $env:GLOBAL_MYSECRET"
    Write-Host "Using a global non-secret var mapped in the pipeline works: $env:GLOBAL_MY_MAPPED_ENV_VAR" 
    Write-Host "Using the mapped env var for this task works and is recommended: $env:MY_MAPPED_ENV_VAR"
  env:
    MY_MAPPED_ENV_VAR: $(mySecret) # the recommended way to map to an env variable